CMAKE_MINIMUM_REQUIRED(VERSION 2.4)
IF(COMMAND CMAKE_POLICY)
  CMAKE_POLICY(SET CMP0003 NEW)
ENDIF(COMMAND CMAKE_POLICY)

PROJECT(QuadEdgeMeshRigidRegistration)

FIND_PACKAGE(ITK REQUIRED)
INCLUDE(${ITK_USE_FILE})

IF( NOT ITK_USE_REVIEW )
  MESSAGE(FATAL_ERROR "ITK must be build with ITK_USE_REVIEW turned ON")
ENDIF( NOT ITK_USE_REVIEW )

IF( NOT ITK_USE_OPTIMIZED_REGISTRATION_METHODS )
  MESSAGE(FATAL_ERROR "ITK must be build with ITK_USE_OPTIMIZED_REGISTRATION_METHODS turned ON")
ENDIF( NOT ITK_USE_OPTIMIZED_REGISTRATION_METHODS )

IF(NOT ${ITK_VERSION_MAJOR} MATCHES "3" )
  MESSAGE(FATAL_ERROR "ITK 3.12 or higher should be used")
ENDIF(NOT ${ITK_VERSION_MAJOR} MATCHES "3" )

IF(${ITK_VERSION_MINOR} LESS 12 )
  MESSAGE(FATAL_ERROR "ITK 3.12 or higher should be used")
ENDIF(${ITK_VERSION_MINOR} LESS 12 )


OPTION(QuadEdgeMeshRigidRegistration_USE_VTK "Use VTK (The Visualization Toolkit) (some applications need this)" OFF)
IF(QuadEdgeMeshRigidRegistration_USE_VTK)
  FIND_PACKAGE(VTK REQUIRED)
  INCLUDE(${VTK_USE_FILE})
ENDIF(QuadEdgeMeshRigidRegistration_USE_VTK)

OPTION(BUILD_REPORTS "Generate articles for the Insight Journal" OFF)

SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin CACHE INTERNAL "Where to put the executables") 
SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin CACHE INTERNAL "Where to put the libraries") 

SET(CXX_TEST_PATH ${EXECUTABLE_OUTPUT_PATH})
SET(TEST_DATA_ROOT ${CMAKE_SOURCE_DIR}/Data)
SET(TEMP ${CMAKE_BINARY_DIR}/Testing/Temporary)

INCLUDE(${PROJECT_SOURCE_DIR}/Utilities/KWStyle/KWStyle.cmake)

INCLUDE(CTest)

#-----------------------------------------------------------------------------
# Installation and Packaging
SET(CPACK_PACKAGE_NAME "QuadEdgeMeshRigidRegistration")
SET(CPACK_PACKAGE_VENDOR "KITWARE Inc.")
SET(CPACK_PACKAGE_VERSION_MAJOR "2")
SET(CPACK_PACKAGE_VERSION_MINOR "0")
SET(CPACK_PACKAGE_VERSION_PATCH "0")
INCLUDE(CPack)


INCLUDE_DIRECTORIES(
  ${PROJECT_SOURCE_DIR}/Source
  ${PROJECT_SOURCE_DIR}/../QuadEdgeMeshFieldSmoothingFilters/Source
  )

# Disable MSVC 8 warnings
IF(WIN32)
  OPTION(DISABLE_MSVC8_DEPRECATED_WARNINGS
         "Disable Visual Studio 8 deprecated warnings" ON)
  MARK_AS_ADVANCED(FORCE DISABLE_MSVC8_DEPRECATED_WARNINGS)  
  IF(DISABLE_MSVC8_DEPRECATED_WARNINGS)
    ADD_DEFINITIONS(-D_CRT_SECURE_NO_DEPRECATE)
  ENDIF(DISABLE_MSVC8_DEPRECATED_WARNINGS)
ENDIF(WIN32)

ADD_SUBDIRECTORY( Source )
ADD_SUBDIRECTORY( Testing )
ADD_SUBDIRECTORY( Examples )

IF( BUILD_REPORTS )
  ADD_SUBDIRECTORY( Documents )
ENDIF( BUILD_REPORTS )
